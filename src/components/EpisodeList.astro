---
import EpisodeCard from './EpisodeCard.astro';
const { episodes } = Astro.props;
---

<section id="episodes" class="py-16 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden">
  <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-secondary-100/30 via-transparent to-transparent"></div>
  <div class="container mx-auto px-4 relative z-10">
    <h2 class="text-3xl font-bold mb-8 text-center text-secondary-900">Latest Episodes</h2>
    
    <div class="grid gap-8">
      {episodes && episodes.length > 0 ? (
        <div class="mb-12">
          <EpisodeCard episode={episodes[0]} featured={true} />
        </div>
      ) : null}
      
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 md:gap-8">
        {episodes && episodes.length > 1 ? 
          episodes.slice(1, 7).map(episode => (
            <EpisodeCard episode={episode} />
          ))
        : 
          <div class="col-span-full text-center py-12">
            <p class="text-gray-500">No episodes available at the moment.</p>
          </div>
        }
      </div>
      
      {episodes && episodes.length > 7 ? (
        <div class="text-center mt-8">
          <a 
            href="https://redmonk.com/blog/category/appearances/" 
            class="btn inline-flex items-center gap-2 bg-gradient-to-r from-secondary-800 to-secondary-700 text-white px-6 py-3 rounded-md hover:shadow-lg hover:-translate-y-1 transition-all"
          >
            View All Episodes
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12h14"></path><path d="m12 5 7 7-7 7"></path></svg>
          </a>
        </div>
      ) : null}
    </div>
  </div>
</section>